services:
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports: ["5672:5672", "15672:15672"]
    networks: [nidaan-pro-net]
    dns: [8.8.8.8]

  service-registry:
    build: { context: ./service-registry, dockerfile: Dockerfile }
    container_name: service-registry
    network_mode: host
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761"]
      interval: 30s
      timeout: 10s
      retries: 5

  auth-service:
    build: { context: ./auth-service, dockerfile: Dockerfile }
    container_name: auth-service
    network_mode: host
    dns: [8.8.8.8]
    environment:
      - SERVER_PORT=8080
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://localhost:8761/eureka/
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_RABBITMQ_HOST=localhost
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - JWT_SECRET=${JWT_SECRET}
    depends_on: { service-registry: { condition: service_healthy } }

  user-profile-service:
    build: { context: ./user-profile-service, dockerfile: Dockerfile }
    container_name: user-profile-service
    network_mode: host
    dns: [8.8.8.8]
    environment:
      - SERVER_PORT=8081
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://localhost:8761/eureka/
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
    depends_on: { service-registry: { condition: service_healthy } }

  consultation-service:
    build: { context: ./consultation-service, dockerfile: Dockerfile }
    container_name: consultation-service
    network_mode: host
    dns: [8.8.8.8]
    environment:
      - SERVER_PORT=8082
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://localhost:8761/eureka/
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_RABBITMQ_HOST=localhost
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - HMS_MANAGEMENT_TOKEN=${HMS_MANAGEMENT_TOKEN}
    depends_on: { service-registry: { condition: service_healthy } }

  notification-service:
    build: { context: ./notification-service, dockerfile: Dockerfile }
    container_name: notification-service
    network_mode: host
    dns: [8.8.8.8]
    environment:
      - SERVER_PORT=8083
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://localhost:8761/eureka/
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_RABBITMQ_HOST=localhost
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - JWT_SECRET=${JWT_SECRET}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
    depends_on: { service-registry: { condition: service_healthy } }

  chat-service:
    build: { context: ./chat-service, dockerfile: Dockerfile }
    container_name: chat-service
    network_mode: host
    dns: [8.8.8.8]
    environment:
      - SERVER_PORT=8084
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://localhost:8761/eureka/
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on: { service-registry: { condition: service_healthy } }

  payment-service:
    build: { context: ./payment-service, dockerfile: Dockerfile }
    container_name: payment-service
    network_mode: host
    dns: [8.8.8.8]
    environment:
      - SERVER_PORT=8085
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://localhost:8761/eureka/
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
    depends_on: { service-registry: { condition: service_healthy } }
  
  api-gateway:
    build: { context: ./api-gateway, dockerfile: Dockerfile }
    container_name: api-gateway
    network_mode: host
    dns: [8.8.8.8]
    environment:
      - SERVER_PORT=9000
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://localhost:8761/eureka/
      - JWT_SECRET=${JWT_SECRET}
    depends_on: [auth-service, user-profile-service, consultation-service, notification-service, chat-service, payment-service]

  chat-proxy:
    build: { context: ../frontend, dockerfile: Dockerfile.proxy }
    container_name: chat-proxy
    command: node proxy-server.mjs
    ports: ["9001:9001"]
    networks: [nidaan-pro-net]
  
  notification-proxy:
    build: { context: ../frontend, dockerfile: Dockerfile.proxy }
    container_name: notification-proxy
    command: node notification-proxy.mjs
    ports: ["9002:9002"]
    networks: [nidaan-pro-net]

networks:
  nidaan-pro-net:
    driver: bridge